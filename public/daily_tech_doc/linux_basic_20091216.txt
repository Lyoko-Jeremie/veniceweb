介绍Linux系统的基础知识


1. cat 链接并显示文件
<1> cat myfile 会显示文件myfile的所有内容
<2> cat myfile1 myfile2 会显示myfile1和myfile2的内容
<3> cat -n myfile 会显示文件myfile的所有内容，加行号
<4> cat > newfile  (如果myfile已经存在，覆盖已有的内容)
会把标准输入的内容输入到newfile中. <Ctrl - D>结束标准输入.

2. more 浏览或者翻阅文本文件
<1> more myfile 显示文件myfile的内容
<2> more -10 myfile 显示文件myfile的内容, 没屏幕显示10行<Space>翻页, <Q>退出

3. cp 拷贝文件
<1> cp file1 file2 拷贝file1到file2
<2> cp -i file1 file2 如果目标存在，覆盖前提示用户
<3> cp -r fold1 fold2 递归的拷贝文件夹(需要-r参数)

4. mv 移动文件
<1> mv file1 file2 移动file1到file2
<2> mv -i file1 file2 如果目标存在，覆盖前提示用户
<3> mv fold1 fold2 移动文件夹(和移动文件一样, 不需要-r参数)

5. rm 删除文件
<1> rm file 删除file
<2> rm -i file 删除前提示用户
<3> rm -r fold 递归的删除fold的所有内容，包括子目录和文件

6. ls 显示文件信息
ls [Options] [pathname]
ls 如果pathname不写，则显示当前目录的所有文件
ls ~ 显示当前用户的$HOME目录下的文件
ls ~user1 显示user1用户的$HOME目录下的文件
<1> ls 显示文件
<2> ls -a 显示所有文件，包含隐藏文件
<3> ls -i 显示文件，包括inode
<4> ls -l 显示文件的详细信息
<5> ls -F 在目录名后面显示/, 在二进制后面显示*, 在符号链接后面显示@

7. mkdir 一个或者多个目录
<1> mkdir dir1 创建目录dir1
<2> mkdir dir1 dir2 创建目录dir1, dir2
<3> mkdir -m 700 dir1 创建目录dir1，并指定权限700 
<4> mkdir -p(小写) dir1/dir2 可以创建父目录, 会创建dir1和dir1的子目录dir2

8. rmdir 删除一个目录(可以用rm -r dir代替)
<1> rmdir dir1  删除dir1
    (效果等同于 rm -r dir1)
<2> rmdir dir1/dir2    删除dir2, 保留dir1
<3> rmdir -p dir1/dir2 同时删除dir2和dir1

9. man 查看命令信息
<1> man ls 查看ls命令的信息. 和more一样，<Space>翻页, <Q>退出
<2> man -k login 根据关键字login进行搜索
<3> man -s2 login 指定搜索的Linux手册的章节

10. whereis 沿着特定的路径搜索二进制，源文件，和用户手册的位置
<1> whereis sh 搜索sh的二进制，源文件，和用户手册
<2> whereis -b sh 只搜索二进制
<3> whereis -m sh 只搜索用户手册
<4> whereis -s sh 只搜索源文件

11. whoami 查看当前登录用户

12. cal 查看当前日期

13. alias 设置别名
<1> alias 查看当前所有的别名
<2> alias dir='ls -al'  (dir /tmp等于ls -al /tmp)
    alias gohome='cd /home/username'
<3> unalias dir 删除dir别名
<4> unalias 删除所有别名

14. file 查看文件类型
<1> file pic2 查看pic2的类型

15. Shell元字符
* 多个字符的匹配符
[a-zA-Z0-9] 一个字符
? 一个字符

16. 介绍Linux中文件的表示和存储:
a. 磁盘存储
磁道(track): 一个计算机系统有多个磁盘驱动器，一个磁盘驱动器具有上下两个盘片组成，每个盘片逻辑的划分成一些同心圆，这些同心圆叫做磁道.
柱面: 两个盘面上位置相同的磁道组成的柱面
扇区(sector): 每个磁道分成大小固定的部分，叫做扇区.

所以扇区的寻址方式是四维地址，实际应用中转换成线性的块号来访问.
<磁盘#, 柱面#, 磁道#, 扇区#>

b. 索引节点
每个文件具有一些列的属性，文件名，所有者，在磁盘上的存储位置等等，这些属性存储在磁盘上叫做“索引节点”的区域，
当文件被打开的时候，索引节点会被复制到内存中，加快访问。
所以每个文件都有文件名和索引节点号来表示<inode#,filename>

c. 文件如何访问?
索引节点中保存了文件在磁盘上的存储位置，所以通过索引节点号找到索引节点，然后通过存在在索引节点中的文件在磁盘的位置来访问.

d. Linux为每个执行的命令都打开三个文件: stdin, stdout, stderr, 文件描述符分别是0, 1, 2 

e. Linux中每个打开的文件都有一个文件描述符(file descriptor), 是一个小整数，每个进程都有一个对应的文件描述表，里面包含了该进程的
   文件描述符的所有信息，通过这个文件描述符表，可以定位到系统范围内的文件表，其中包含了指向索引节点的指针，可以通过索引节点来进一步访问文件的内容.

   [每个进程对应的文件描述符表] -> [系统范围的文件表] -> [系统反问的索引节点列表] -> {找到一个特定的索引节点，访问文件}

17. 文件结束的标志:
每个Linux文件都有一个文件结束的标志, eof, 当输入是键盘时候，结束标志是<Ctrl - D>

18. 如何添加一个用户到Linux, 已经密码设置等问题:
<1> 添加一个用户到系统(需要root权限)
    useradd -d /home/user1 user1  (新增用户)
    passwd user1                  (设置密码)
    
<2> 查看1#中新增的用户的一些属性: 
    (新增用户的标示号是501, 新增用户的组标示号是501)
    /etc/passwd
    /etc/shadow
    /etc/group

    a. vi /etc/passwd(使用:分隔)
    root:x:0:0:root:/root:/bin/bash
    ...
    user1:x:501:501:user1:/home/user1:/bin/bash

    注册名:口令:用户标识号:组标识号:用户名:用户主目录:命令解释程序
    口令: 口令不再直接保存在passwd文件中，通常将passwd文件中的口令字段使用一个“x”来代替，将/etc/shadow作为真正的口令文件，
          如果passwd字段中的第一个字符是“*”的话，那么，就表示该账号被查封了，系统不允许持有该账号的用户登录.

    b. vi /etc/shadow(使用:分隔)
    root:$1$ZodQOm7y$orHTJc0cZ8xezSKp6qwUB/:14551:0:99999:7:::
    ...
    user1:$1$o2lVGRCW$xENueH2aqDKzWvKk03o3I/:14599:0:99999:7:::

    帐号名称:密码:上次修改密码的日期:密码不可被变更的天数:密码需要被重新变更的天数:密码变更前提前几天警告:帐号失效日期:帐号取消日期:保留条目，目前没用
    密码: 这里是加密过的
    密码需要被重新变更的天数: 99999表示不需要变更

    c. vi /etc/group
    root:x:0:root
    ...
    user1:x:501:
    
    组名:加密密码:组ID:所有属于该组的用户列表
    如果用户列表为空，表明成员列表在/etc/passwd文件中指定了

<3> 创建用户的时候指定组(user2属于组user1):
    useradd -d /home/user2 -g user1 user2
    vi /etc/passwd
    user2:x:502:501::/home/user2:/bin/bash  (user2属于组user1#501)

    使用groups查看user2所在的组:
    groups user2
    user2 : user1

19. Linux文件权限包括:
    a. 文件的权限
    User, Group, Others -> u, g, o
    读, 写, 执行        -> r, w, x 
    取值范围是000-777
    
    新建一个文件file1, 查看它的访问权限(-标示0)
    ls -l file1
    -rw-r--r-- 1 root root 23 12-21 12:42 file1
    文件类型和权限 链接数 文件所有者 文件所有者所在的组 文件大小(byte) 日期 事件 文件名
    文件类型: - 标示普通文件, d标示目录

    User: rw-
    Group: r--
    Others: r--

    修改文件的权限:
    chmod u+r file1
    chmod g-rw file1
    chomd o=rwx file1
    chmod a=rwx file1 (等于chmod 777 file1, a表示ugo)
    chmod 777 file1
    chmod -R 777 fold1 (递归的设置子文件和子文件夹的权限)

    b. 目录的权限
   目录的读权限: 可以读取目录的内容，也就是ls可以列出目录中所有的文件，但是不能创建的目录或者文件到这个目录中
   目录的写权限: 可以在这个目录中创建新的目录或者文件
   目录的执行权限: 可以搜索目录的内容，但是不能读或者写
   (目录在用哟读写权限之前，必须先用够执行权限)

20. 默认文件的访问权限
<1> umask 显示默认的umask的值
umask
0002

<2> umask XXX 设置默认的umask, 这样新建文件的权限就是777-XXX
文件访问权限= 777 - mask

umask 777 -> 新建文件的权限是: ---------
umask 002 -> 新建文件的权限是: rw-rw-r--
不管屏蔽码是多少, 遵循以下规则:
a. 新创建的文件默认不具有可执行允可权限
b. 新创建的目录默认具有可执行允可权限

21. 特殊访问位:

22.

    
    





















