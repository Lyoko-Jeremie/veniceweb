Erlang的参数化模板

本质上就是一个module就相当于OOP中的一个类, 每个module对可以实例化很多不同的对象, 各个对象的
方法在各自的状态中执行.

1. 参数化模板的用法:
a. 声明一个参数化模板
   -module(print, [Arg1, Arg2]).
b. 这样声明的module回自动export一个new函数, 可以这么使用:
   Module1 = print:new(Arg1_1, Arg2_1),
   Module2 = print:new(Arg1_2, Arg2_2),
   Module1:message("test msg - 1"),
   Module2:message("test msg - 2"),


2. 下面看一个实际的应用例子:
##print.erl##
-module(print, [Name]).
-export([message/1]).

message(Text) ->
    io:format("~s: '~s'~n", [Name, Text]),
    ok.


##test.erl##
-module(test).
-export([start/0]).

start() ->
    M1 = print:new("User1"),
    M2 = print:new("User2"),
    M1:message("this is a test msg - 1"),
    M2:message("this is a test msg - 2"),
    ok.

编译, 执行之后的结果是:
test:start().
User1: 'this is a test msg - 1'
User2: 'this is a test msg - 2'
ok


